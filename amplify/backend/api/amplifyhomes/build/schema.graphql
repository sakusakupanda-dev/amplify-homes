type Home @aws_iam @aws_api_key {
  id: ID!
  address: String
  image_url: String
  price: Float
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelHomeConnection @aws_api_key @aws_iam {
  items: [Home]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelHomeFilterInput {
  id: ModelIDInput
  address: ModelStringInput
  image_url: ModelStringInput
  price: ModelFloatInput
  and: [ModelHomeFilterInput]
  or: [ModelHomeFilterInput]
  not: ModelHomeFilterInput
  _deleted: ModelBooleanInput
}

type Query {
  getHome(id: ID!): Home @aws_api_key @aws_iam
  listHomes(filter: ModelHomeFilterInput, limit: Int, nextToken: String): ModelHomeConnection @aws_api_key @aws_iam
  syncHomes(filter: ModelHomeFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelHomeConnection @aws_api_key @aws_iam
}

input ModelHomeConditionInput {
  address: ModelStringInput
  image_url: ModelStringInput
  price: ModelFloatInput
  and: [ModelHomeConditionInput]
  or: [ModelHomeConditionInput]
  not: ModelHomeConditionInput
  _deleted: ModelBooleanInput
}

input CreateHomeInput {
  id: ID
  address: String
  image_url: String
  price: Float
  _version: Int
}

input UpdateHomeInput {
  id: ID!
  address: String
  image_url: String
  price: Float
  _version: Int
}

input DeleteHomeInput {
  id: ID!
  _version: Int
}

type Mutation {
  createHome(input: CreateHomeInput!, condition: ModelHomeConditionInput): Home @aws_api_key @aws_iam
  updateHome(input: UpdateHomeInput!, condition: ModelHomeConditionInput): Home @aws_api_key @aws_iam
  deleteHome(input: DeleteHomeInput!, condition: ModelHomeConditionInput): Home @aws_api_key @aws_iam
}

input ModelSubscriptionHomeFilterInput {
  id: ModelSubscriptionIDInput
  address: ModelSubscriptionStringInput
  image_url: ModelSubscriptionStringInput
  price: ModelSubscriptionFloatInput
  and: [ModelSubscriptionHomeFilterInput]
  or: [ModelSubscriptionHomeFilterInput]
  _deleted: ModelBooleanInput
}

type Subscription {
  onCreateHome(filter: ModelSubscriptionHomeFilterInput): Home @aws_subscribe(mutations: ["createHome"]) @aws_api_key @aws_iam
  onUpdateHome(filter: ModelSubscriptionHomeFilterInput): Home @aws_subscribe(mutations: ["updateHome"]) @aws_api_key @aws_iam
  onDeleteHome(filter: ModelSubscriptionHomeFilterInput): Home @aws_subscribe(mutations: ["deleteHome"]) @aws_api_key @aws_iam
}
